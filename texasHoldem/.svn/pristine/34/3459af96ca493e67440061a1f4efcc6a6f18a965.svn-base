/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Logiikka.tarkastajat;

import Logiikka.Kasi;
import Logiikka.Kortti;
import Logiikka.Poyta;

/**
 *
 * @author Teemu
 */
public class TarkastettavaKasi {

    private Kortti[] kortit;

    public TarkastettavaKasi(Kasi kasi, Poyta poyta) {
        kortit = new Kortti[7];
        laitaKateenKaikkiKortit(kasi, poyta);

    }

    public Kortti[] laitaKateenKaikkiKortit(Kasi kasi, Poyta poyta) {

        Kortti kortti;
        for (int i = 0; i < 5; i++) {
            if (kortit[i] == null) {
                kortit[i] = poyta.getKortti(i);
            }
        }
        if (kortit[5] == null) {
            kortit[5] = kasi.getKortti(0);
        }
        if (kortit[6] == null) {
            kortit[6] = kasi.getKortti(1);
        }
        return kortit;
    }

    public Kortti getTarkistettavaKortti(int i) {
        if (kortit[i] != null) {
            return kortit[i];
        } else {
            return null;
        }
    }

    public int[] jarjestaKortitSuurimmastaPieninpaan() {
        Kortti kortti;
        int[] jarjestettyKasi = new int[7];
        for (int i = 0; i < 7; i++) {
            kortti = getTarkistettavaKortti(i);
            jarjestettyKasi[i] = kortti.getArvo();
        }
        java.util.Arrays.sort(jarjestettyKasi);
        return jarjestettyKasi;
    }

    public int[] jarjestaKortitPienimmastaSuurinpaan(TarkastettavaKasi kasi) {
        
        boolean vaihdettu = true;
        int j = 0;
        Kortti tmp;
        Kortti tmp2;
        while (vaihdettu) {
            vaihdettu = false;
            j++;
            for (int i = 0; i < kortit.length - j; i++) {
                if (kasi.getTarkistettavaKortti(i).getArvo() > kasi.getTarkistettavaKortti(i+1).getArvo()) {

                    tmp = kasi.getTarkistettavaKortti(i);
                    tmp2=kasi.getTarkistettavaKortti(i+1);
                    

                    kortit[i + 1] = tmp;

                    vaihdettu = true;

                }

            }

        }
    }
}