/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Logiikka;

/**
 *
 * @author Teemu
 */
public class TodennäköisyysTarkistaja {

/*
 * Tarkistaa kannattaako lähteä pelaamaan ennen floppia tietyllä kädellä. Käy läpi kaikki käsivaihtoehdot.
 */
    public double TarkistaTodennakoisyysEnnenFloppia(Kasi kasi) {

        if (kasi.getKortti(0).getArvo() == 1) {         // Ensimmäinen kortti on ässä.
            if (kasi.getKortti(1).getArvo() == 1) {
                return 0.8494;
            } else if (kasi.getKortti(1).getArvo() == 2) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.5551;
                }
                return 0.5295;
            } else if (kasi.getKortti(1).getArvo() == 3) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.563;
                }
                return 0.539;
            } else if (kasi.getKortti(1).getArvo() == 4) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.571;
                }
                return 0.547;
            } else if (kasi.getKortti(1).getArvo() == 5) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.581;
                }
                return 0.557;
            } else if (kasi.getKortti(1).getArvo() == 6) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.582;
                }
                return 0.559;
            } else if (kasi.getKortti(1).getArvo() == 7) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.594;
                }
                return 0.572;
            } else if (kasi.getKortti(1).getArvo() == 8) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.605;
                }
                return 0.584;
            } else if (kasi.getKortti(1).getArvo() == 9) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.615;
                }
                return 0.595;
            } else if (kasi.getKortti(1).getArvo() == 10) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.635;
                }
                return 0.616;
            } else if (kasi.getKortti(1).getArvo() == 11) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.644;
                }
                return 0.625;
            } else if (kasi.getKortti(1).getArvo() == 12) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.653;
                }
                return 0.635;
            } else if (kasi.getKortti(1).getArvo() == 13) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.662;
                }
                return 0.645;
            }
        }
        if (kasi.getKortti(0).getArvo() == 2) {     // Ensimmäinen kortti on 2.
            if (kasi.getKortti(1).getArvo() == 2) {
                return 0.4938;
            } else if (kasi.getKortti(1).getArvo() == 1) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.555;
                }
                return 0.530;
            } else if (kasi.getKortti(1).getArvo() == 3) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.331;
                }
                return 0.292;
            } else if (kasi.getKortti(1).getArvo() == 4) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.339;
                }
                return 0.301;
            } else if (kasi.getKortti(1).getArvo() == 5) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.349;
                }
                return 0.312;
            } else if (kasi.getKortti(1).getArvo() == 6) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.348;
                }
                return 0.311;
            } else if (kasi.getKortti(1).getArvo() == 7) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.354;
                }
                return 0.317;
            } else if (kasi.getKortti(1).getArvo() == 8) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.377;
                }
                return 0.341;
            } else if (kasi.getKortti(1).getArvo() == 9) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.400;
                }
                return 0.365;
            } else if (kasi.getKortti(1).getArvo() == 10) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.425;
                }
                return 0.392;
            } else if (kasi.getKortti(1).getArvo() == 11) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.452;
                }
                return 0.421;
            } else if (kasi.getKortti(1).getArvo() == 12) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.481;
                }
                return 0.451;
            } else if (kasi.getKortti(1).getArvo() == 13) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.512;
                }
                return 0.484;
            }

        }
        if (kasi.getKortti(0).getArvo() == 3) {    // Ensimmäinen kortti on 3.
            if (kasi.getKortti(1).getArvo() == 3) {
                return 0.5284;
            } else if (kasi.getKortti(1).getArvo() == 1) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.5631;
                }
                return 0.5386;
            } else if (kasi.getKortti(1).getArvo() == 2) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3310;
                }
                return 0.2923;
            } else if (kasi.getKortti(1).getArvo() == 4) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3572;
                }
                return 0.3206;
            } else if (kasi.getKortti(1).getArvo() == 5) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3675;
                }
                return 0.3317;
            } else if (kasi.getKortti(1).getArvo() == 6) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3670;
                }
                return 0.3308;
            } else if (kasi.getKortti(1).getArvo() == 7) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3732;
                }
                return 0.3370;
            } else if (kasi.getKortti(1).getArvo() == 8) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3829;
                }
                return 0.3475;
            } else if (kasi.getKortti(1).getArvo() == 9) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4084;
                }
                return 0.3742;
            } else if (kasi.getKortti(1).getArvo() == 10) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4334;
                }
                return 0.4015;
            } else if (kasi.getKortti(1).getArvo() == 11) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4603;
                }
                return 0.4295;
            } else if (kasi.getKortti(1).getArvo() == 12) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4896;
                }
                return 0.4602;
            } else if (kasi.getKortti(1).getArvo() == 13) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.5207;
                }
                return 0.4933;
            }

        }
        if (kasi.getKortti(0).getArvo() == 4) {     // Ensimmäinen kortti on 4.
            if (kasi.getKortti(1).getArvo() == 4) {
                return 0.5627;
            } else if (kasi.getKortti(1).getArvo() == 1) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.5716;
                }
                return 0.5475;
            } else if (kasi.getKortti(1).getArvo() == 2) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3392;
                }
                return 0.3009;
            } else if (kasi.getKortti(1).getArvo() == 3) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3572;
                }
                return 0.3206;
            } else if (kasi.getKortti(1).getArvo() == 5) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3852;
                }
                return 0.3509;
            } else if (kasi.getKortti(1).getArvo() == 6) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3846;
                }
                return 0.3499;
            } else if (kasi.getKortti(1).getArvo() == 7) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.3908;
                }
                return 0.3568;
            } else if (kasi.getKortti(1).getArvo() == 8) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4011;
                }
                return 0.3672;
            } else if (kasi.getKortti(1).getArvo() == 9) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4142;
                }
                return 0.3808;
            } else if (kasi.getKortti(1).getArvo() == 10) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4419;
                }
                return 0.4104;
            } else if (kasi.getKortti(1).getArvo() == 11) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4686;
                }
                return 0.4387;
            } else if (kasi.getKortti(1).getArvo() == 12) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.4973;
                }
                return 0.4693;
            } else if (kasi.getKortti(1).getArvo() == 13) {
                if (kasi.getKortti(0).getMaa() == kasi.getKortti(1).getMaa()) {
                    return 0.5290;
                }
                return 0.5021;
            }

        }




        return 0.0;
    }
/*
 * Tarkistaa kannattaako lähteä pelaamaan flopin jälkeen tietyllä kädellä. 
 */
    public double TarkistaTodennäköisyysFlopinJälkeen(Kasi kasi, Poyta poyta){
        return 0.0;
    }
/*
 * Tarkistaa kannattaako lähteä pelaamaan turnin jälkeen tietyllä kädellä. 
 */
    public double TarkistaTodennäköisyysTurninJälkeen(Kasi kasi, Poyta poyta){
        return 0.0;
    }
/*
 * Tarkistaa kannattaako lähteä pelaamaan riverin jälkeen tietyllä kädellä. 
 */
    public double TarkistaTodennäköisyysRiverinJälkeen(Kasi kasi, Poyta poyta){
        return 0.0;
    }
}
